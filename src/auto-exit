#! /bin/bash

# Copyright (c) 2015 Run Scripts Limited
#
# Licensed under the Apache License, Version 2.0 (the "License"); you
# may not use this file except in compliance with the License.  You
# may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#

# 
# auto-exit -- die deterministically
#

# -e should only apply to read (write?) and broken pipes
set -ue

usage () 
{
    (
	echo "usage: $0 [options]" 
	echo "where options are:" 
	echo "	-e STATUS	exit with STATUS" 
	echo "	-k SIGNAL	kill self with SIGNAL" 
	echo "	-r NUM		read NUM lines (-s N seconds apart)" 
	echo "	-s NUM		sleep for NUM seconds" 
	echo "	-w NUM		write NUM lines (-s N seconds apart)" 
    ) >&2
}

opt_exit=0
opt_kill=
opt_read=
opt_sleep=0
opt_write=

while getopts "e:k:r:s:w:" opt ; do
    case "${opt}" in
    e)
	opt_exit=${OPTARG}
	;;
    k)
	opt_kill=${OPTARG}
	;;
    r)
	opt_read=${OPTARG}
	;;
    s)
	opt_sleep=${OPTARG}
	;;
    w)
	opt_write=${OPTARG}
	;;
    *)
	usage
	exit 1
	;;
    esac
done

var_read=1
var_write=1

if [[ ${opt_read} || $opt_write ]] ; then
    while [[ ${opt_read} || ${opt_write} ]] ; do
	if [[ ${opt_write} ]] ; then
	    if [[ ${opt_write} -gt 0 ]] ; then
		echo "$$: line ${var_write}"
		var_write=$(( var_write + 1 ))
		opt_write=$(( opt_write - 1 ))
	    else
		opt_write=
	    fi
	fi
	sleep $opt_sleep
	if [[ ${opt_read} ]] ; then
	    if [[ ${opt_read} -gt 0 ]] ; then
		read line
		echo "$$: read #${var_read} '${line}'"
		var_read=$(( var_read + 1 ))
		opt_read=$(( opt_read - 1 ))
	    else
		opt_read=
	    fi
	fi
    done
else
    sleep $opt_sleep
fi

if [[ ${opt_kill} ]] ; then
    kill -${opt_kill} $$
fi

exit ${opt_exit}
