;;
;; Copyright (c) 2015 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; libc.idio
;;

define (c/number-cmp low high) {
  if (not (eqv? low high)) {
    test (c/< low high) #t
    test (c/< high low) #f
    test (c/<= low high) #t
    test (c/<= high low) #f
    test (c/<= high high) #t
    test (c/== high high) #t
    test (c/== low high) #f
    test (c/> low high) #f
    test (c/> high low) #t
    test (c/>= low high) #f
    test (c/>= high low) #t
    test (c/>= high high) #t
  } {
    test (c/== low high) #t
  }
}
;; numbers

;; quick type tests of the primitively-definied c/INTMAX_MAX and the
;; locally defined INTMAX_MAX
test (c/int? c/INTMAX_MAX) #t
INTMAX_MAX := c/INTMAX_MAX
test (c/int? INTMAX_MAX) #t

;; comparison tests vs. 0
c/number-cmp (c/integer-> 0) c/INTMAX_MAX
c/number-cmp c/INTMAX_MIN (c/integer-> 0)

;; comparison tests vs lim-1
INTMAX_MAX-1 := c/integer-> ((c/->integer c/INTMAX_MAX) - 1)
c/number-cmp INTMAX_MAX-1 c/INTMAX_MAX

;; comparison tests vs lim+1
INTMAX_MIN+1 := c/integer-> ((c/->integer c/INTMAX_MIN) + 1)
c/number-cmp c/INTMAX_MIN INTMAX_MIN+1

;; overflow conversion tests -- one beyond the C MAX/MIN
monitor (function (cont cond) {
  ;; edisplay* "bignum INTMAX_MAX+1 conversion error" cont cond
  test (rt-bignum-conversion-error? cond) #t
  #f
}) {
  INTMAX_MAX+1 := (c/integer-> ((c/->integer c/INTMAX_MAX) + 1))
  test INTMAX_MAX+1 #f
  ;; display* "INTMAX_MAX+1" c/INTMAX_MAX INTMAX_MAX+1
}

monitor (function (cont cond) {
  ;; edisplay* "bignum INTMAX_MIN-1 conversion error" cont cond
  test (rt-bignum-conversion-error? cond) #t
  #f
}) {
  INTMAX_MIN-1 := (c/integer-> ((c/->integer c/INTMAX_MIN) - 1))
  test INTMAX_MIN-1 #f
  ;; display* "INTMAX_MIN-1" c/INTMAX_MIN INTMAX_MIN-1
}

;; overflow conversion tests -- many beyond the C MAX/MIN
monitor (function (cont cond) {
  ;; edisplay* "bignum INTMAX_MAX+1 conversion error" cont cond
  test (rt-bignum-conversion-error? cond) #t
  #f
}) {
  INTMAX_MAX+1 := (c/integer-> ((c/->integer c/INTMAX_MAX) * 100000))
  test INTMAX_MAX+1 #f
  ;; display* "INTMAX_MAX+1" c/INTMAX_MAX INTMAX_MAX+1
}

monitor (function (cont cond) {
  ;; edisplay* "bignum INTMAX_MIN-1 conversion error" cont cond
  test (rt-bignum-conversion-error? cond) #t
  #f
}) {
  INTMAX_MIN-1 := (c/integer-> ((c/->integer c/INTMAX_MIN) * 100000))
  test INTMAX_MIN-1 #f
  ;; display* "INTMAX_MIN-1" c/INTMAX_MIN INTMAX_MIN-1
}

