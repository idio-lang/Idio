;;; ACK -- One of the Kernighan and Van Wyk benchmarks.

;; (define (ack m n)
;;   (cond ((= m 0) (+ n 1))
;;         ((= n 0) (ack (- m 1) 1))
;;         (else (ack (- m 1) (ack m (- n 1))))))

;; (ack 3 8)

c := 0

define (ack m n) {
  c = c + 1
  cond ((== m 0) (n + 1)) \
       ((== n 0) (ack (m - 1) 1)) \
       (else (ack (m - 1) (ack m (n - 1))))
}

ack 3 8

#*
for-each (function (n) {
	    s0 := SECONDS
	    c = 0
	    printf "ack 3 %s => %4s in %7s loops in %ss\n" n (ack 3 n) c (SECONDS - s0)
	    }) (list 1 2 3 4 5 6 7 8)

ack 3 1 =>   13 in     106 loops in 0s
ack 3 2 =>   29 in     541 loops in 0s
ack 3 3 =>   61 in    2432 loops in 0s
ack 3 4 =>  125 in   10307 loops in 1s
ack 3 5 =>  253 in   42438 loops in 1s
ack 3 6 =>  509 in  172233 loops in 5s
ack 3 7 => 1021 in  693964 loops in 21s
ack 3 8 => 2045 in 2785999 loops in 91s

s9fes-20090906	235s
s9fes-20181025	2s
Python 3.8.3	RecursionError: maximum recursion depth exceeded in comparison
*#