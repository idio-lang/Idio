;;; CPSTAK -- A continuation-passing version of the TAK benchmark.
;;; A good test of first class procedures and tail recursion.
 
;; (define (cpstak x y z)

;;   (define (tak x y z k)
;;     (if (not (< y x))
;;         (k z)
;;         (tak (- x 1)
;;              y
;;              z
;;              (lambda (v1)
;;                (tak (- y 1)
;;                     z
;;                     x
;;                     (lambda (v2)
;;                       (tak (- z 1)
;;                            x
;;                            y
;;                            (lambda (v3)
;;                              (tak v1 v2 v3 k)))))))))

;;   (tak x y z (lambda (a) a)))

;; (do ((i 0 (+ 1 i))) ((= i 10))
;;   (cpstak 18 12 6))

cpstak := function (x y z) {
  tak :+ function (x y z k) {
    ;;display* "tak" x y z
    if (not (lt y x)) (k z) {
       tak (x - 1) \
           y \
	   z \
	   (function (v1) {
	     tak (y - 1) \
		 z \
		 x \
		 (function (v2) {
		   tak (z - 1) \
		       x \
		       y \
		       (function (v3) {
			 tak v1 v2 v3 k
		       })
		 })
	   })
       }
  }

  tak x y z (function (a) a)
}

do ((i 0 (1 + i))) ((== i 10)) {
  cpstak 18 12 6
}
