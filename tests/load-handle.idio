
expr := "display* \"This is an expr for load-handle\""

ish := open-input-string expr

load-handle ish

bad-expr := "display* \"This is a bad-expr for load-handle: (unterminated string)"

ish := open-input-string bad-expr

display* "NOTICE: load-handle.idio: raising NON-CONT condition; this will be picked up by load-handle: pre"
load-handle ish
display* "NOTICE: load-handle.idio: raising NON-CONT condition; this will be picked up by load-handle: post"

cont-expr := "(false)"

ish := open-input-string cont-expr

; running the command false will do two things: 1. generate a SIGCHLD
; 2. generate a ^rt-command-status-error (as "false" returned a
; non-zero exit status)
trap ^rt-signal-SIGCHLD (function (cont cond) {
}) {
  trap ^rt-command-status-error (function (cont cond) {
				   edisplay* "test load-handle trap:" cond.message "with" cond.status
  }) {
    display* "NOTICE: exec false; this will be picked up by test load-handle trap: pre"
    load-handle ish
    display* "NOTICE: exec false; this will be picked up by test load-handle trap: post"
  }
}
