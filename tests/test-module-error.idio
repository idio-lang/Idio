;;
;; Copyright (c) 2021 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; test-module-error.idio
;;

module tests/module

module-error0 := Tests

#*

We have a bunch of test cases which should provoke a ^rt-module-error
or ^rt-parameter-type-error.  So we can write a load function which
will wrapper the actual load with a trap for
(^rt-module-error ^rt-parameter-type-error) and compare the message
strings.

*#

module-error-load := {
  n := 0

  function (filename msg) {
    if (not (string? filename)) (error 'load "not a string" filename)

    load-k := #n

    n = n + 1
    ;eprintf "loading #%s %s looking for %s\n" n filename msg
    trap (^rt-module-error
	  ^rt-parameter-error) (function (c) {
				  ;eprintf "module-error #%s: %s %s\n" n msg c.location
				  test c.message msg

				  if (not (string=? c.message msg)) {
				    condition-report (append-string "module-error-load: " filename) c (current-error-handle)
				  }

				  load-k 'module-error
	  }) {
      call/cc (function (k) {
		 load-k = k
		 (symbol-value 'load 'Idio) filename
      })
    }
  }
}

module-error-load "module-errors/set-module-vci-unbound.idio" "module name unbound"
module-error-load "module-errors/set-module-vci-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a module|symbol"

module-error-load "module-errors/set-module-vvi-unbound.idio" "module name unbound"
module-error-load "module-errors/set-module-vvi-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a module|symbol"

module-error-load "module-errors/find-module-unbound.idio" "module name unbound"

module-error-load "module-errors/set-module-imports-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a list|nil"
module-error-load "module-errors/set-module-exports-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a list|nil"

module-error-load "module-errors/module-imports-unbound.idio" "module name unbound"
module-error-load "module-errors/module-imports-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a module|symbol"

module-error-load "module-errors/module-exports-unbound.idio" "module name unbound"
module-error-load "module-errors/module-exports-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a module|symbol"

module-error-load "module-errors/module-symbols-unbound.idio" "module name unbound"
module-error-load "module-errors/module-symbols-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a module|symbol"

module-error-load "module-errors/find-symbol-module-unbound.idio" "module name unbound"

module-error-load "module-errors/symbol-value-module-unbound.idio" "module name unbound"
module-error-load "module-errors/symbol-value-bad-module-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a module|symbol"

module-error-load "module-errors/symbol-value-recurse-module-unbound.idio" "module name unbound"
module-error-load "module-errors/symbol-value-recurse-bad-module-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a module|symbol"

;; all done?
Tests? (module-error0 + 18)
