;;
;; Copyright (c) 2015 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; keyword.idio
;;
keyword0 := Tests

test (keyword? a) #f
test (keyword? :a) #t

test (symbol? :a) #f

;; check operators don't get mistaken for keywords
test (keyword? \:=) #f

kw := make-keyword "b"

test (keyword? kw) #t
test (symbol? kw) #f

kw = make-keyword 'c

test (keyword? kw) #t
test (symbol? kw) #f

kw-table := (make-keyword-table)

test (keyword-get kw-table :a #f) #f

monitor (function (cont cond) {
  ;; display* "hash key not found monitor condition:" (struct-type-name cond)
  test (rt-hash-key-not-found? cond) #t
  if cont {
    if (rt-hash-key-not-found? cond) {
      #f
    } (error "hash key not found: unexpected condition" cond)
  } (error "hash key not found: unexpected non-continuable error" cond)
}) {
  test (keyword-get kw-table :a) #f
}

keyword-set! kw-table :a "apple"
test (keyword-get kw-table :a) "apple"

;; all done?
test (keyword0 + 12) Tests
