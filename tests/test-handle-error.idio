;;
;; Copyright (c) 2021 Ian Fitchet <idf(at)idio-lang.org>
;;
;; Licensed under the Apache License, Version 2.0 (the "License"); you
;; may not use this file except in compliance with the License.  You
;; may obtain a copy of the License at
;;
;;     http://www.apache.org/licenses/LICENSE-2.0
;;
;; Unless required by applicable law or agreed to in writing, software
;; distributed under the License is distributed on an "AS IS" BASIS,
;; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
;; See the License for the specific language governing permissions and
;; limitations under the License.
;;
;;

;;
;; test-handle-error.idio
;;

handle-error0 := Tests

handle-error-load := {
  n := 0

  function (filename msg) {
    if (not (string? filename)) (error 'load "not a string" filename)

    load-k := #n

    n = n + 1
    ;eprintf "loading #%s %s looking for %s\n" n filename msg
    trap (^i/o-error
	  ^rt-parameter-error
	  ^system-error
	  ^rt-environ-variable-error) (function (c) {
					 ;eprintf "handle-error #%s: %s %s\n" n msg c.location
					 test c.message msg

					 if (not (string=? c.message msg)) {
					   condition-report (append-string "handle-error-load: " filename) c (current-error-handle)
					 }
					 load-k 'handle-error
	  }) {
	    call/cc (function (k) {
		       load-k = k
		       (symbol-value 'load 'Idio) filename
	    })
	  }
  }
}

handle-error-load "handle-errors/read-char-bad-handle.idio" "handle read error"
handle-error-load "handle-errors/read-char-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a input handle"
handle-error-load "handle-errors/close-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a handle"
handle-error-load "handle-errors/close-input-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a input handle"
handle-error-load "handle-errors/close-input-bad-handle.idio" "handle '*stdout*' is not a input handle"
handle-error-load "handle-errors/close-output-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a output handle"
handle-error-load "handle-errors/close-output-bad-handle.idio" "handle '*stdin*' is not a output handle"

handle-error-load "handle-errors/closed-handle-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a handle"

handle-error-load "handle-errors/seek-whence-bad-type.idio" "whence 'maybe' is invalid: 'set, 'end or 'cur"

handle-error-load "handle-errors/display-bad-handle.idio" "handle write error"
handle-error-load "handle-errors/display-bad-type.idio" "bad parameter type: '#t' a CONSTANT_IDIO is not a output handle"

;; code coverage
handle-location (current-input-handle)

;; ready? after a peek-char
ish := open-input-string "hello"
test (peek-char ish) #\h
test (ready? ish) #t

test (closed-handle? ish) #f
close-handle ish
test (closed-handle? ish) #t

delete-file testfile
ofh := open-output-file testfile
puts "(pair 1 2)\n" ofh
close-handle ofh

ifh := open-input-file testfile
test (read-expr ifh) '(pair 1 2)
close-handle ifh


ofh := open-output-file testfile
puts (make-string (2 * (C/->integer libc/BUFSIZ)) #\A) ofh

;; code coverage
flush-handle ofh

;; code coverage: seek bignum
seek-handle ofh 4e1

newline ofh

close-handle ofh

;; all done?
Tests? (handle-error0 + 16)
