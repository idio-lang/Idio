
string-error0 := Tests

;; We have a bunch of test cases which should provoke a ^string-error
;; or a ^rt-parameter-type-error of some kind.  So we can write a load
;; function which will wrapper the actual load with a trap for
;; (^string-error ^rt-parameter-type-error) and compare the message
;; strings.

string-error-load := {
  n := 0

  function (filename msg) {
    if (not (string? filename)) (error 'load "not a string" filename)

    load-k := #n

    n = n + 1
    ;edisplay* "loading #" n filename "looking for" msg "at line" linenum
    trap (^string-error ^rt-parameter-type-error) (function (c) {
						     ;edisplay* n msg c.location c.line
						     test c.message msg

						     if (not (string=? c.message msg)) {
						       condition-report (append-string "string-error-load: " filename) c (current-error-handle)
						     }
						     load-k 'string-error
    }) {
      call/cc (function (k) {
		 load-k = k
		 (symbol-value 'load 'Idio) filename
      })
    }
  }
}

;; test the various possible errors in string.c including an embedded
;; variant to check we pick up the correct line number

string-error-load "string-errors/string-symbol-format.idio" "string format: string contains an ASCII NUL"

string-error-load "string-errors/make-string-float.idio" "bad parameter type: '1.5e+0' a BIGNUM is not a integer"
string-error-load "string-errors/make-string-unicode.idio" "bad parameter type: 'a' a CONSTANT_UNICODE is not a integer"
string-error-load "string-errors/make-string-negative.idio" "string size: invalid"

string-error-load "string-errors/string-ref-float.idio" "bad parameter type: '1.5e+0' a BIGNUM is not a integer"
string-error-load "string-errors/string-ref-unicode.idio" "bad parameter type: 'a' a CONSTANT_UNICODE is not a integer"
string-error-load "string-errors/string-ref-negative.idio" "string length: out of bounds"
string-error-load "string-errors/string-ref-too-large.idio" "string length: out of bounds"
string-error-load "string-errors/string-ref-bignum.idio" "string length: out of bounds"

string-error-load "string-errors/string-set-constant.idio" "bad parameter: string (\"hello\") is constant"
string-error-load "string-errors/string-set-float.idio" "bad parameter type: '1.5e+0' a BIGNUM is not a integer"
string-error-load "string-errors/string-set-unicode.idio" "bad parameter type: 'a' a CONSTANT_UNICODE is not a integer"
string-error-load "string-errors/string-set-negative.idio" "string length: out of bounds"
string-error-load "string-errors/string-set-too-large.idio" "string length: out of bounds"
string-error-load "string-errors/string-set-bignum.idio" "string length: out of bounds"
string-error-load "string-errors/string-set-too-wide.idio" "string width: replacement char too wide"

string-error-load "string-errors/substring-offset-float.idio" "bad parameter type: '1.5e+0' a BIGNUM is not a integer"
string-error-load "string-errors/substring-offset-unicode.idio" "bad parameter type: 'a' a CONSTANT_UNICODE is not a integer"
string-error-load "string-errors/substring-offset-bignum.idio" "substring index: out of bounds"
string-error-load "string-errors/substring-length-float.idio" "bad parameter type: '1.5e+0' a BIGNUM is not a integer"
string-error-load "string-errors/substring-length-unicode.idio" "bad parameter type: 'a' a CONSTANT_UNICODE is not a integer"
string-error-load "string-errors/substring-length-bignum.idio" "substring index: out of bounds"

string-error-load "string-errors/substring-oob-offset-negative.idio" "substring index: out of bounds"
string-error-load "string-errors/substring-oob-offset-too-large.idio" "substring index: out of bounds"
string-error-load "string-errors/substring-oob-length-negative.idio" "substring index: out of bounds"
string-error-load "string-errors/substring-oob-length-too-large.idio" "substring index: out of bounds"
string-error-load "string-errors/substring-oob-start-beyond-end.idio" "substring index: out of bounds"

;; all done?
test (string-error0 + 27) Tests
