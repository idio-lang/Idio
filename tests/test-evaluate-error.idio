
evaluate-error0 := Tests

;; We have a bunch of test cases which should provoke a ^evaluate-error of
;; some kind.  So we can write a load function which will wrapper the
;; actual load with a trap for ^evaluate-error and compare the message
;; strings.

evaluate-error-load := {
  n := 0

  function (filename msg) {
    if (not (string? filename)) (error 'load "not a string" filename)

    load-k := #n

    n = n + 1
    edisplay* "loading #" n filename
    trap ^static-error (function (cont cond) {
			    edisplay* n msg cond
			    test cond.message msg
			    if (not (string=? cond.message msg)) {
			      condition-report (string-append "evaluate-error-load: " filename) cont cond (current-error-handle)
			    }
			    load-k cond
    }) {
      call/cc (function (k) {
		 load-k = k
		 %load filename
      })
    }
  }
}


evaluate-error-load "evaluate-errors/toplevel-extend-kind.idio" "EOF in list"

;; all done?
test Tests (evaluate-error0 + 1)
