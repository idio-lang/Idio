
expander-error0 := Tests

;; We have a bunch of test cases which should provoke an error of some
;; kind.  So we can write a load function which will wrapper the
;; actual load with a trap for whatever error and compare the message
;; strings.

;; One slight inconvenience is that {trap} only takes literal symbols,
;; not values that evaluate to a symbol.  So we need a number of
;; trap-thunks all of which do much of a muchness.  Cue the macro.

;c := make-condition ^idio-error "msg" "loc" "det"
;edisplay* c.location

module *expander*

define-macro (expander-trap type) {
  loader-name := string->symbol (append-string "expander-trap-" (symbol->string type))
  condition-name := string->symbol (append-string "^" (symbol->string type))
  #T{

    $loader-name := {
      function (filename msg) {
	if (not (string? filename)) (error 'load "not a string" filename)

	load-k := #n

	;edisplay* "loading #" filename "looking for" msg
	thunk := function () {
		   trap $condition-name (function (c) {
					   ;edisplay* "caught" msg c.location
					   test c.message msg
					   if (not (string=? c.message msg)) {
					     condition-report (append-string "expander-error-load: " filename) c (current-error-handle)
					   }
					   load-k c
		   }) {
		     call/cc (function (k) {
				load-k = k
				(symbol-value 'load 'Idio) filename
		     })
		   }
	}

	run-in-thread *expander-thread* thunk
      }
    }
  }
}

expander-trap st-function-arity-error
expander-trap evaluation-error

;; test the various possible errors in expander.c including an embedded
;; variant to check we pick up the correct line number

expander-trap-st-function-arity-error "expander-errors/let-1-arg.idio" "(let bindings body)"
expander-trap-evaluation-error "expander-errors/let-invalid-bindings.idio" "parameter type: bindings: pair"
expander-trap-evaluation-error "expander-errors/let-invalid-binding.idio" "parameter type: binding: pair/symbol"

expander-trap-st-function-arity-error "expander-errors/let*-1-arg.idio" "(let* bindings body)"
expander-trap-evaluation-error "expander-errors/let*-invalid-bindings.idio" "parameter type: bindings: pair"

expander-trap-st-function-arity-error "expander-errors/letrec-1-arg.idio" "(letrec bindings body)"
expander-trap-evaluation-error "expander-errors/letrec-invalid-bindings.idio" "parameter type: bindings: pair"
expander-trap-evaluation-error "expander-errors/letrec-invalid-binding.idio" "parameter type: binding: pair/symbol"

expander-trap-st-function-arity-error "expander-errors/infix-too-many-before.idio" "too many args before \":=\""
expander-trap-st-function-arity-error "expander-errors/infix-too-few-after.idio" "too few args after \":=\""

;; all done?
test Tests (expander-error0 + 10)
