
display* "This is trap.idio"

;%%vm-dis 1

trap ^rt-signal-SIGCHLD (function (cont cond) {
  ;display* "trapped ^rt-signal-SIGCHLD" cont cond
  }) {
  trap ^rt-signal-SIGHUP (function (cont cond) {
    display* "trapped ^rt-signal-SIGHUP" cont cond
    }) {
      echo Hello World
  }
}

;; test out the base-condition-handler

; ^error is normally not continuable
display* "trap: raise CONT ^error: pre"
raise #t (make-condition ^error)
display* "trap: raise CONT ^error: post"

; non-continuable conditions will be caught by module/load (or load)
display* "trap: raise NON-CONT ^error: pre"
raise #f (make-condition ^error)
display* "trap: raise NON-CONT ^error: post"

{
  f := (function (s) {
    edisplay* "s =" s
    echo s
    raise #f (make-condition ^error)
  })

  f "default-condition-handler test"
}
